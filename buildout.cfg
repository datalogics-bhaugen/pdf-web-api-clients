[buildout]
extends = versions.cfg
show-picked-versions = true
log-directory = ${:directory}/var/log
src-directory = ${:directory}/src
test-directory = ${:directory}/test
develop = ${:src-directory}
parts =
    venv
    3scale
    app
    libevent
    gevent
    server
    nose
    qa

[venv]
recipe = zc.recipe.egg
eggs = virtualenv

[3scale]
name = ThreeScalePY
recipe = zc.recipe.egg
eggs =
    ${:name}
    lxml
archive = https://github.com/3scale/3scale_ws_api_for_python/archive/master.zip
find-links = ${:archive}#egg=${:name}

[app]
name = server
recipe = zc.recipe.egg
eggs =
    Flask
    requests
    simplejson
    ${3scale:eggs}
    ${:name}
entry-points = ${:name}=${:app}.run
arguments = host='0.0.0.0'
url = http://127.0.0.1:5000/api
app = ${:name}:app
script = ${buildout:bin-directory}/${:name}

[gevent]
recipe = zc.recipe.egg:custom
include-dirs = ${libevent:location}/include
library-dirs = ${libevent:location}/lib

[libevent]
recipe = zc.recipe.cmmi
url = https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz

[server]
name = gunicorn
recipe = zc.recipe.egg
eggs =
    ${:name}
    gevent
initialization =
    execfile('${app:script}')
script = ${buildout:bin-directory}/${:name}
scripts = ${:name}

[nose]
recipe = pbp.recipe.noserunner
eggs = ${app:eggs}
initialization =
    print('cd %s' % '${:working-directory}')
working-directory = ${buildout:test-directory}

[qa]
recipe = zc.recipe.egg
eggs =
    flake8
    pep8-naming
    ${app:eggs}
entry-points = flake8=flake8.run:main

